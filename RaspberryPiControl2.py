# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'RaspberryPiControl1.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import requests
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtGui import QImage, QPixmap
import socket
import cv2
import pickle
import struct
import threading


class Ui_MainWindow(object):
    def __init__(self):
        print('Main ui initialized')
        self.URL = 'http://127.0.0.1:'
        # self.URL = 'http://192.168.43.159:'
        self.port = str(9091)

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1118, 653)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.Forword = QtWidgets.QPushButton(self.centralwidget)
        self.Forword.setGeometry(QtCore.QRect(810, 80, 71, 71))
        self.Forword.setObjectName("Forword")
        self.Reverse = QtWidgets.QPushButton(self.centralwidget)
        self.Reverse.setGeometry(QtCore.QRect(810, 220, 71, 71))
        self.Reverse.setObjectName("Reverse")
        self.Right = QtWidgets.QPushButton(self.centralwidget)
        self.Right.setGeometry(QtCore.QRect(880, 150, 71, 71))
        self.Right.setObjectName("Right")
        self.Left = QtWidgets.QPushButton(self.centralwidget)
        self.Left.setGeometry(QtCore.QRect(740, 150, 71, 71))
        self.Left.setObjectName("Left")
        self.MyImage = QtWidgets.QLabel(self.centralwidget)
        self.MyImage.setGeometry(QtCore.QRect(20, 20, 640, 480))
        self.MyImage.setText("")
        self.MyImage.setPixmap(QtGui.QPixmap("../../Pictures/Screenshots/Screenshot (6).png"))
        self.MyImage.setObjectName("MyImage")
        self.ShowImage = QtWidgets.QPushButton(self.centralwidget)
        self.ShowImage.setGeometry(QtCore.QRect(60, 520, 93, 28))
        self.ShowImage.setObjectName("ShowImage")
        self.graphicsView = QtWidgets.QGraphicsView(self.centralwidget)
        self.graphicsView.setGeometry(QtCore.QRect(700, 360, 256, 192))
        self.graphicsView.setObjectName("graphicsView")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1118, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.Forword.pressed.connect(self.on_click_forword)
        self.Reverse.pressed.connect(self.on_click_reverse)
        self.Right.pressed.connect(self.on_click_clockwise)
        self.Left.pressed.connect(self.on_click_anticlockwise)
        self.ShowImage.clicked.connect(self.on_click_showImage)

        self.Forword.released.connect(self.on_click_stop)
        self.Reverse.released.connect(self.on_click_stop)
        self.Right.released.connect(self.on_click_stop)
        self.Left.released.connect(self.on_click_stop)


    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.Forword.setText(_translate("MainWindow", "Forword"))
        self.Reverse.setText(_translate("MainWindow", "Reverse"))
        self.Right.setText(_translate("MainWindow", "Right"))
        self.Left.setText(_translate("MainWindow", "Left"))
        self.ShowImage.setText(_translate("MainWindow", "Show Image"))

    def on_click_forword(self):
        data = requests.get(url=self.URL+self.port+'/forword')
        print(data)

    def on_click_reverse(self):
        data = requests.get(url=self.URL+self.port+'/reverse')
        print(data)

    def on_click_clockwise(self):
        data = requests.get(url=self.URL+self.port+'/clockwise')
        print(data)

    def on_click_anticlockwise(self):
        data = requests.get(url=self.URL+self.port+'/anticlockwise')
        print(data)

    def on_click_stop(self):
        data = requests.get(url=self.URL+self.port+'/stop')
        print(data)

    def on_click_showImage(self):
        print("hi")
        threading.Thread(target=self.controlCamera).start()

    def controlCamera(self):
        serversocket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        host = "127.0.0.1"
        # host = '192.168.43.159'
        port = 9092
        serversocket.connect((host, port))
        data = b""
        payload_size = struct.calcsize(">L")
        while True:
            while len(data) < payload_size:
                data += serversocket.recv(4096)

            packed_msg_size = data[:payload_size]
            data = data[payload_size:]
            msg_size = struct.unpack(">L", packed_msg_size)[0]
            while len(data) < msg_size:
                data += serversocket.recv(4096)
            frame_data = data[:msg_size]
            data = data[msg_size:]

            frame = pickle.loads(frame_data, fix_imports=True, encoding="bytes")
            frame = cv2.imdecode(frame, cv2.IMREAD_COLOR)
            height, width, channel = frame.shape
            bytesPerLine = 3 * width
            qImg = QImage(frame.data, width, height, bytesPerLine, QImage.Format_RGB888).rgbSwapped()
            # name = "frame.png"
            # cv2.imwrite(name, frame)
            # image = QPixmap("./"+name)
            self.MyImage.setPixmap(QPixmap(qImg))
            # cv2.imshow('ImageWindow', frame)
            cv2.waitKey(1)

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
